class RemoveDataFromLL{
	public static class Node{
		int data;
		Node next;
		public Node(int data){
			this.data=data;
			this.next=null;
		}
	}
	public static Node head;
	public static Node tail;
	public void addFirst(int data){
		Node newNode=new Node(data);
		if(head==null){
			head=tail=newNode;
			return;
		}
		newNode.next=head;
		head=newNode;
	}
	void PrintLinkedList(){
		if(head==null){
			System.out.print("\n LL is Empty");
			return;
		}
		Node temp=head;
		while(temp!=null){
			System.out.print(temp.data+"  ");
			temp=temp.next;
		}
		System.out.print("\n");
	}
	Node  removeElements(Node head, int val) {
       		Node  curr=head;
      		while(curr!=null){
		        if(curr.next!=null&&curr.data==val){
		            Node temp=curr.next;
		            curr.data=temp.data;
		            curr.next=temp.next;
		        }
		        else{
		            curr=curr.next;
		        }
               }
               Node temp=head;
               Node prev=null;
               while(temp.next!=null){
               		prev=temp;
               		temp=temp.next;
               }
               if(temp.data==val){
               		prev.next=temp.next;
               }
     return head;
    }
	public static void main(String args[]){
		RemoveDataFromLL obj1=new RemoveDataFromLL();
		obj1.addFirst(15);
		obj1.addFirst(18);
		obj1.addFirst(15);
		obj1.addFirst(12);
		obj1.addFirst(17);
		obj1.addFirst(15);
		obj1.PrintLinkedList();
		//obj1.removeElements(head,15);
		obj1.removeElements_M2(head,15);
		obj1.PrintLinkedList();
	}
}
