class DoublyLinklist{
	public static class Node{
		int data;
		Node prev;
		Node next;
		public Node(int data){
			this.data=data;
			this.prev=null;
			this.next=null;
		}
	}
	public static Node head;
	public static Node tail;
	public static int size;
	static void  addFirst(int data){
		Node newNode=new Node(data);
		size++;
		if(head==null){
			head=tail=newNode;
			return ;
		}
			newNode.next=head;
			head.prev=newNode;
			//newNode.prev=null;
			head=newNode;
	}
	static void  printList(){
		Node temp=head;
		if(temp==null){
			System.out.print("\n Empty ll    \n");
			return;
		}
		while(temp!=null){
			System.out.print(temp.data+"-> ");
			temp=temp.next;
		}
		System.out.print("\n-------");
		/*Node temp=tail;
		if(tail==null){
			System.out.print("\n Empty ll    \n");
			return;
		}
		while(temp!=null){
			System.out.print(temp.data+"-->  ");
			temp=temp.prev;
		}*/
	}
	public static void removeLast(){
		if(tail==null){
			return;
		}
		tail=tail.prev;
		tail.next=null;
	}
	public static int removeFirst(){
		if(head==null){
			return Integer.MIN_VALUE;
		}
		else if(head.next==null){
			int data=head.data;
			head=tail=null;
			return data;
		}
		int data=head.data;
		head=head.next;
		head.prev=null;
		return data;
	}
	public static void main(String args[]){
		DoublyLinklist obj1=new DoublyLinklist();
		//printList();
		addFirst(10);
		addFirst(9);
		addFirst(8);
		addFirst(7);
		printList();
		removeLast();
		System.out.print("\nAfter removal of last-->:");
		printList();
		removeFirst();
		System.out.print("\nAfter removal of First-->:");
		printList();
	}
}
