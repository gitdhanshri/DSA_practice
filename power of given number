class Solution {
    static double find_sub(double num,int n){
		if(n==0){
			return 1.0;
		}
		double ans=0.0;
		if(n%2==0){
			ans=(find_sub(num*num,n/2));
		}else{
			ans=num*(find_sub(num,n-1));
		}
		return ans;
	}
    public double myPow(double x, int n) {
        // assign for Negative power
        boolean sign=false;
		if(n<0){
            // make sign true if n<0
			sign=true;
            // assign edge case
			if(n==Integer.MIN_VALUE  && (x== 1.0 || x== -1.0)){
				return 1.0;
			}else if(n==Integer.MIN_VALUE){
                return 0.0;
            }
            else{
                // convert power to positve integer by multipling it by -1
				n=(-1)*n;
			}
		}
		double ans=find_sub(x,n);
        //if sign== True then answer become -> ans=1/ans
		if(sign == true){
			ans=1/ans;
		}
        // return final answer
		return ans;
    }
}
