class DeleteNthNodeFromLL{
	public static class Node{
		int data;
		Node next;
		public Node(int data){
			this.data=data;
			this.next=null;
		}
	}
	public static Node head;
	public static Node tail;
	public static int size;
	
	void addAtFirst(int data){
		Node newNode=new Node(data);
		size++;
		if(head==null){
			head=newNode;
			return;
		}
		//Node temp=head;
		newNode.next=head;
		head=newNode;
	}
	void printLinkedList(){
		System.out.print("\nRequired LL----->:  ");
		if(size==0){
			System.out.println("  length of LL  Zero");
			return;
		}
		Node temp=head;
		if(head==null){
			System.out.print("\n Empty LinkList.....");
			return;
		}
		while(temp!=null){
			System.out.print(temp.data+"  ");
			temp=temp.next;
		}
	
		
	}
	/*public  static*/ void deleteFirst(){			  
		Node curr=head;
		if(head==null){
			System.out.println("Empty LL\n");
			return;
		}
		
		 else if(head!=null){
			head=curr.next;;
			return ;
		}	
	}
	/*public static*/ Node deleteNthNode(Node head,int n){
		Node curr=head;
		Node nulval=null;
		if(n==1){
			deleteFirst();
			return curr;	
		}
		else if(n<1){
			System.out.println("Can't Removed....");
			return nulval;
		}
		else{
			Node prev=null;
 			curr=head;
			int i=1;
			while(i<n){
				prev=curr;
				curr=curr.next;
				i++;
			}
			prev.next=curr.next;
			return head;
		}
	}
	public static void main(String args[]){
		DeleteNthNodeFromLL obj1=new DeleteNthNodeFromLL();
		obj1.addAtFirst(11);
		obj1.addAtFirst(12);
		obj1.addAtFirst(13);
		obj1.addAtFirst(14);
		obj1.addAtFirst(15);
		obj1.addAtFirst(16);
		obj1.printLinkedList();	
		//System.out.println("\nhead data-->"+head.data);
		//obj1.deleteFirst();
	     	obj1.deleteNthNode(head,1);
		obj1.printLinkedList();	
		System.out.println("\n");
	}
}
